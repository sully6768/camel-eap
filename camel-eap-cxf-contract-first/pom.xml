<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--
  #%L
  Wildfly Camel
  %%
  Copyright (C) 2013 - 2016 RedHat
  %%
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  #L%
  -->
<project
    xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.redhat.camel</groupId>
        <artifactId>camel-eap</artifactId>
        <version>1.0.0-SNAPSHOT</version>
        <relativePath>..</relativePath>
    </parent>

    <artifactId>camel-eap-cxf-contract-first</artifactId>
    <packaging>war</packaging>

    <name>Wildfly Camel :: EAP Example :: Camel CXF Contract First</name>
    <description>Creates a web service using the WSDL contract first</description>

    <properties>
        <camel.version>2.15.1.redhat-621107</camel.version>
        <cxf.version>3.0.4.redhat-621107</cxf.version>
    </properties>


    <dependencies>

        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-core</artifactId>
<!--             <scope>provided</scope> -->
        </dependency>

        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-cxf</artifactId>
<!--             <scope>provided</scope> -->
        </dependency>

        <!-- cxf using slf4j -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- using Jetty with CXF -->
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-transports-http-jetty</artifactId>
            <version>${cxf.version}</version>
<!--             <scope>provided</scope> -->
        </dependency>

<!--         <dependency> -->
<!--             <groupId>org.apache.camel</groupId> -->
<!--             <artifactId>camel-test-spring</artifactId> -->
<!--             <scope>provided</scope> -->
<!--         </dependency> -->

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
<!--             <scope>provided</scope> -->
        </dependency>
    </dependencies>

    <build>
        <plugins>

            <plugin>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-codegen-plugin</artifactId>
                <version>${cxf.version}</version>
                <executions>
                    <execution>
                        <id>generate-sources</id>
                        <phase>generate-sources</phase>
                        <configuration>
                            <sourceRoot>${basedir}/target/generated/src/main/java</sourceRoot>
                            <wsdlOptions>
                                <wsdlOption>
                                    <wsdl>${basedir}/src/main/resources/wsdl/order.wsdl</wsdl>
                                    <extraargs>
                                        <extraarg>-impl</extraarg>
                                    </extraargs>
                                </wsdlOption>
                            </wsdlOptions>
                        </configuration>
                        <goals>
                            <goal>wsdl2java</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.6</source>
                    <target>1.6</target>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
            </plugin>

            <!-- allows the route to be ran via 'mvn camel:run' -->
            <plugin>
                <groupId>org.apache.camel</groupId>
                <artifactId>camel-maven-plugin</artifactId>
                <version>${camel.version}</version>
            </plugin>

            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>fabric8-maven-plugin</artifactId>
                <version>1.1.0-SNAPSHOT</version>
                <configuration>
                    <profile>camel-war-contractfirst</profile>

                    <!-- lets run the war in a tomcat container -->
                    <parentProfiles>containers-tomcat</parentProfiles>
                    <!--
                              uncomment this line to use jetty instead:
                              <parentProfiles>containers-jetty</parentProfiles>
                    -->
                    <!--
                              This option lets us run a static main() using spring and camel instead of using a WAR:
                              <parentProfiles>containers-java.camel.spring</parentProfiles>
                    -->
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
